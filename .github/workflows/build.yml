name: C/C++ CI

on:
  workflow_dispatch:
  push:
    branches: ["main"]
#  pull_request:
#    branches: [ "main" ]

env:
  GECKO_VERSION: "4.3.1"
  COMMANDER_VERSION: "1v15p3b1357"

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Changelog
        uses: ardalanamini/auto-changelog@v4
        id: changelog
        with:
          release-name: v${{env.GECKO_VERSION}}
          release-name-prefix: ""
          commit-types: |
            ‚ú® feat: New Features
            üêû fix: Bug Fixes
            üèóÔ∏è build: Build System & Dependencies
            üïú perf: Performance Improvements
            üìÑ docs: Documentation
            üß™ test: Tests
            ‚öôÔ∏è refactor: Refactors
            ü§π ci: CI
            üåà style: Code Style
      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        id: "changelog-updater"
        with:
          # Pass extracted release date, release notes and version to the Action.
          # release-date: ${{ steps.release_date.outputs.date }}
          release-notes: ${{steps.changelog.outputs.changelog}}
          latest-version: v${{env.GECKO_VERSION}}
          #compare-url-target-revision: ${{ github.event.release.target_commitish }}

      - name: Show Changelog
        run: |-
          cat CHANGELOG.md

      - name: "Download And Install Simplicity Commander"
        run: |
          wget https://www.silabs.com/documents/login/software/SimplicityCommander-Linux.zip
          unzip SimplicityCommander-Linux.zip
          tar xvf SimplicityCommander-Linux/Commander_linux_x86_64_${COMMANDER_VERSION}.tar.bz
      - uses: robinraju/release-downloader@v1.8
        name: Download GeckoSDK
        with:
          repository: "SiliconLabs/gecko_sdk"
          tag: "v${{env.GECKO_VERSION}}"
          fileName: "gecko-sdk.zip"
          out-file-path: ./gecko_sdk_${{env.GECKO_VERSION}}
          extract: true
      - name: Install Arm Toolchain
        id: arm
        uses: turtlesec-no/get-arm-toolchain@main
      - name: Arm Toolchain version
        run: echo "${{ steps.arm.outputs.version }}"
      - name: make
        run: BASE_SDK_PATH=./gecko_sdk_${GECKO_VERSION} make -f rcp-uart-802154_2.Makefile release
      - name: create gbl
        run: ./commander/commander gbl create  "./build/release/rcp-uart-802154_2.gbl" --app "./build/release/rcp-uart-802154_2.s37"
      - name: Rename output build
        run: for file in build/release/rcp-uart-802154_2*; do mv "$file" "${file/_2/}"; done
      - uses: actions/upload-artifact@v3
        with:
          name: Firmwares
          path: build/release/rcp-uart-802154* # or path/to/artifact
      - uses: CupOfTea696/gh-action-auto-release@v1.0.2
        id: release
        with:
          title: "Release: $version"
          tag: "v$semver"
          draft: false
          regex: "/^Release: #{semver}$/i"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact and release ${{env.GECKO_VERSION}}
        if: ${{ steps.release.outputs.upload_url }}
        uses: nanoufo/action-upload-artifacts-and-release-assets@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: |
            build/release/rcp-uart-802154.*
          upload-release-files: true
          release-upload-url: ${{steps.release.outputs.upload_url}}
